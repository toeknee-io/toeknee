// Generated by CoffeeScript 1.10.0
(function() {
  var fofApp;

  fofApp = angular.module("fofApp");

  fofApp.controller("ChatController", [
    "$scope", function($scope) {
      var socket;
      socket = io.connect();
      $scope.messages = [];
      $scope.roster = [];
      $scope.name = '';
      $scope.text = '';
      socket.on('connect', function() {
        $scope.setName();
      });
      socket.on('message', function(msg) {
        $scope.messages.push(msg);
        $scope.$apply();
      });
      socket.on('roster', function(names) {
        $scope.roster = names;
        $scope.$apply();
      });
      $scope.send = function() {
        window.console.log('Sending message:', $scope.text);
        socket.emit('message', {
          name: $scope.name,
          msg: $scope.text
        });
        $scope.text = '';
      };
      return $scope.setName = function() {
        socket.emit('identify', $scope.name);
      };
    }
  ]);

  fofApp.controller("GalleryController", [
    "$scope", "$http", "$routeParams", function($scope, $http, $routeParams) {
      var galleryId;
      galleryId = $routeParams.galleryId || "";
      $scope.photos = [];
      $("#file-input").fileinput({
        uploadUrl: "gallery/" + galleryId,
        showPreview: true
      });
      $scope.getPhotos = function() {
        return $http.get("gallery/" + galleryId).then(function(res) {
          var file, j, len, ref, results;
          window.console.log("Files found: " + (JSON.stringify(res.data)));
          $scope.photos = [];
          ref = res.data;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            file = ref[j];
            window.console.log("Creating src for file: " + file);
            results.push($scope.photos.push({
              src: "gallery/" + $routeParams.galleryId + "/" + file,
              desc: 'Image 01'
            }));
          }
          return results;
        }, function(res) {
          return window.console.log(JSON.stringify(res));
        });
      };
      $scope.getPhotos();
      $('#file-input').on('fileuploaded', function(event, data, previewId, index) {
        var extra, files, form, reader, ref, response;
        ref = [data.form, data.files, data.extra, data.response, data.reader], form = ref[0], files = ref[1], extra = ref[2], response = ref[3], reader = ref[4];
        console.log('File uploaded triggered');
        return $scope.getPhotos();
      });
      window.console.log("Route params: " + (JSON.stringify($routeParams)));
      $scope._Index = 0;
      $scope.isActive = function(index) {
        return $scope._Index === index;
      };
      $scope.showPrev = function(index) {
        $scope._Index = $scope._Index > 0 ? --$scope._Index : $scope.photos.length - 1;
        window.console.log("Scope index: " + $scope._Index);
      };
      $scope.showNext = function(index) {
        $scope._Index = $scope._Index < $scope.photos.length - 1 ? ++$scope._Index : 0;
        window.console.log("Scope index: " + $scope._Index);
      };
      return $scope.showPhoto = function(index) {
        $scope._Index = index;
        window.console.log("Scope index: " + $scope._Index);
      };
    }
  ]);

  fofApp.controller("SpotifyController", [
    "$scope", "$http", "$animate", "$interval", function($scope, $http, $animate, $interval) {
      var ref;
      $animate.enabled(true);
      window.console.log("Angular animations are enabled: " + ($animate.enabled()));
      ref = [[], 0, "cover", false], $scope.myPlaylists = ref[0], $scope.activeIndex = ref[1], $scope.swap = ref[2], $scope.processing = ref[3];
      $scope.prevIndex = $scope.activeIndex;
      $http.get("/spotify/me/playlists").then(function(res) {
        var j, len, playlist, ref1;
        ref1 = res.data;
        for (j = 0, len = ref1.length; j < len; j++) {
          playlist = ref1[j];
          $scope.myPlaylists.push(playlist);
        }
        return $scope.activePlaylist = $scope.myPlaylists[$scope.activeIndex];
      });
      $scope.setCarousel = function(i) {
        var moveIn, moveOut;
        if (!$scope.processing) {
          $scope.processing = true;
          if (i > $scope.activeIndex) {
            moveOut = 'move-out-right';
            moveIn = 'move-in-left';
          } else {
            moveOut = 'move-out-left';
            moveIn = 'move-in-right';
          }
          if (i < 0) {
            i = $scope.myPlaylists.length - 1;
          } else if (i >= $scope.myPlaylists.length) {
            i = 0;
          }
          $scope.activePlaylist = $scope.myPlaylists[i];
          $("#playlist-cover-" + $scope.activeIndex).addClass(moveOut);
          $("#playlist-cover-" + $scope.activeIndex).removeClass('active');
          return $interval(function() {
            $("#playlist-cover-" + $scope.activeIndex).removeClass(moveOut);
            $("#playlist-cover-" + i).addClass(moveIn);
            return $interval(function() {
              var ref1;
              $("#playlist-cover-" + i).removeClass(moveIn);
              return ref1 = [$scope.activeIndex, i, false], $scope.prevIndex = ref1[0], $scope.activeIndex = ref1[1], $scope.processing = ref1[2], ref1;
            }, 260, 1);
          }, 250, 1);
        }
      };
      $animate.on("addClass", angular.element(document).find("#spotify-playlist-carousel"), function(elm, phase) {
        return window.console.log("Class add detected");
      });
      return $animate.on("removeClass", angular.element(document).find("#spotify-playlist-carousel"), function(elm, phase) {
        return window.console.log("Class removal detected");
      });
    }
  ]);

}).call(this);
